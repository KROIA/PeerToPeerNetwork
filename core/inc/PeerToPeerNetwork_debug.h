#pragma once

// Profiling
#ifdef P2PN_PROFILING
#include <easy/profiler.h>
#include <easy/arbitrary_value.h> // EASY_VALUE, EASY_ARRAY are defined here


#define P2PNP_BLOCK(text, color) EASY_BLOCK(text, profiler::colors:: color)
#define P2PNP_END_BLOCK EASY_END_BLOCK
#define P2PNP_FUNCTION(color) EASY_FUNCTION(profiler::colors:: color)
#define P2PNP_THREAD(name) EASY_THREAD(name)
#define P2PNP_VALUE(id, value) EASY_VALUE(id, value)

#else
#define P2PNP2PNP_BLOCK(text, color)
#define P2PNP_END_BLOCK
#define P2PNP_FUNCTION(color)
#define P2PNP_THREAD(name)
#define P2PNP_VALUE(id, value)
#endif
#define CONCAT_SYMBOLS_IMPL(x, y) x##y
#define CONCAT_SYMBOLS(x, y) CONCAT_SYMBOLS_IMPL(x, y)



// Different color stages
#define P2PNP_COLOR_STAGE_1 50
#define P2PNP_COLOR_STAGE_2 100
#define P2PNP_COLOR_STAGE_3 200
#define P2PNP_COLOR_STAGE_4 300
#define P2PNP_COLOR_STAGE_5 400
#define P2PNP_COLOR_STAGE_6 500
#define P2PNP_COLOR_STAGE_7 600
#define P2PNP_COLOR_STAGE_8 700
#define P2PNP_COLOR_STAGE_9 800
#define P2PNP_COLOR_STAGE_10 900
#define P2PNP_COLOR_STAGE_11 A100 
#define P2PNP_COLOR_STAGE_12 A200 
#define P2PNP_COLOR_STAGE_13 A400 
#define P2PNP_COLOR_STAGE_14 A700 

// Colors for Network 
#define P2PNP_NETWORK_COLORBASE Green
// #define P2PNP_NETWORK_COLOR_1  CONCAT_SYMBOLS(P2PNP_NETWORK_COLORBASE , P2PNP_COLOR_STAGE_1 )
// #define P2PNP_NETWORK_COLOR_2  CONCAT_SYMBOLS(P2PNP_NETWORK_COLORBASE , P2PNP_COLOR_STAGE_2 )
// #define P2PNP_NETWORK_COLOR_3  CONCAT_SYMBOLS(P2PNP_NETWORK_COLORBASE , P2PNP_COLOR_STAGE_3 )
// #define P2PNP_NETWORK_COLOR_4  CONCAT_SYMBOLS(P2PNP_NETWORK_COLORBASE , P2PNP_COLOR_STAGE_4 )
// #define P2PNP_NETWORK_COLOR_5  CONCAT_SYMBOLS(P2PNP_NETWORK_COLORBASE , P2PNP_COLOR_STAGE_5 )
// #define P2PNP_NETWORK_COLOR_6  CONCAT_SYMBOLS(P2PNP_NETWORK_COLORBASE , P2PNP_COLOR_STAGE_6 )
// #define P2PNP_NETWORK_COLOR_7  CONCAT_SYMBOLS(P2PNP_NETWORK_COLORBASE , P2PNP_COLOR_STAGE_7 )
// #define P2PNP_NETWORK_COLOR_8  CONCAT_SYMBOLS(P2PNP_NETWORK_COLORBASE , P2PNP_COLOR_STAGE_8 )
// #define P2PNP_NETWORK_COLOR_9  CONCAT_SYMBOLS(P2PNP_NETWORK_COLORBASE , P2PNP_COLOR_STAGE_9 )
// #define P2PNP_NETWORK_COLOR_10 CONCAT_SYMBOLS(P2PNP_NETWORK_COLORBASE , P2PNP_COLOR_STAGE_10)
// #define P2PNP_NETWORK_COLOR_11 CONCAT_SYMBOLS(P2PNP_NETWORK_COLORBASE , P2PNP_COLOR_STAGE_11) 
// #define P2PNP_NETWORK_COLOR_12 CONCAT_SYMBOLS(P2PNP_NETWORK_COLORBASE , P2PNP_COLOR_STAGE_12) 
// #define P2PNP_NETWORK_COLOR_13 CONCAT_SYMBOLS(P2PNP_NETWORK_COLORBASE , P2PNP_COLOR_STAGE_13) 
// #define P2PNP_NETWORK_COLOR_14 CONCAT_SYMBOLS(P2PNP_NETWORK_COLORBASE , P2PNP_COLOR_STAGE_14) 

#define P2PNP_NETWORK_BLOCK(text, color) P2PNP_BLOCK(text, CONCAT_SYMBOLS(P2PNP_NETWORK_COLORBASE, color))
#define P2PNP_NETWORK_END_BLOCK P2PNP_END_BLOCK
#define P2PNP_NETWORK_FUNCTION(color) P2PNP_FUNCTION(CONCAT_SYMBOLS(P2PNP_NETWORK_COLORBASE, color))
#define P2PNP_NETWORK_THREAD(name) P2PNP_THREAD(name)
#define P2PNP_NETWORK_VALUE(id, value) P2PNP_VALUE(id, value)
